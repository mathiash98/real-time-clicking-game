<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3">
            <div class="list-group" id="adminPageNavList">
                <a href="/admin/player" class="list-group-item list-group-item-action active">Players</a>
                <a href="/admin/crime" class="list-group-item list-group-item-action">Crimes</a>
                <a href="/admin/city" class="list-group-item list-group-item-action">City</a>
                <a href="/admin/weapon" class="list-group-item list-group-item-action">Weapon</a>
                <a href="/admin/armor" class="list-group-item list-group-item-action">Armor</a>
                <a href="/admin/car" class="list-group-item list-group-item-action">Cars</a>
                <a href="/admin/mission" class="list-group-item list-group-item-action">Missions</a>
            </div>
        </div>
        <div class="col-sm-8" id="adminPageContainer">
            
        </div>

    </div>
</div>

<script>
let adminPageContainer = document.getElementById('adminPageContainer');
let lastActiveNavListEl = document.getElementById('adminPageNavList').children[0];
checkURL();
    
function checkURL() {
    /* Gets the current url and checks if it contains some of the defined pages
       if the page is found, it will get the matching data from API and render the needed data */
    let url = '';

    if (history.state == null) { // History date is null when user cam directly to this site etc ip:port/admin/city
        url = document.URL;
    } else { // However if user has used the back/forward button, the history state will change
        url = history.state.url; 
    }
    console.log(url, url.indexOf('crime'));

    // Checks if url contains string and gets data which passes data to render function
    if (url.indexOf('player') >= 0) {
        request('GET', 'player', '', renderPlayerList);
    } else if(url.indexOf('crime') >= 0){
        console.log('got crime in url');
        request('GET', 'crime', '', renderCrimeList);
    } else if(url.indexOf('city') >= 0){
        request('GET', 'city', '', renderCityList);
    } else if(url.indexOf('weapon') >= 0){
        request('GET', 'weapon', '', renderWeaponList);
    } else if(url.indexOf('armor') >= 0){
        request('GET', 'armor', '', renderArmorList);
    } else if(url.indexOf('car') >= 0){
        request('GET', 'car', '', renderCarList);
    } else if(url.indexOf('mission') >= 0){
        request('GET', 'mission', '', renderMissionList);
    }
}

document.getElementById('adminPageNavList').addEventListener('click', function(evt){
    /* Listen for clicks on the navList */
    evt.preventDefault(); // prevent page redirects for example
    lastActiveNavListEl.classList.toggle('active');
    evt.target.classList.toggle('active');
    lastActiveNavListEl = evt.target;

    // Stuff below used to make single page application
    history.pushState({ // Pushes the "new" site to history
        url: evt.target.href,
        title: 'Admin: ' + evt.target.innerHTML
    }, 'Admin: ' + evt.target.innerHTML, evt.target.href);

    document.title = 'Admin: ' + evt.target.innerHTML; // Changes title to appropiate title

    checkURL(); // run "router" function which reads url and runs appropiate functions
});

window.onpopstate = function(event) {
    /* is only runned when user click back button in browser 
        so everytime user clicks a link in the adminPageNavList the eventlistener there has to run check url function*/
    console.log(event);
};

function adminPageCityFormSubmit(evt, el) {
    evt.preventDefault();
    console.log(el);
    console.log(el.name);
    let tmpcity = {
        name: el.name.value,
        level: el.level.value
    }
    request('POST', 'city', JSON.stringify(tmpcity), function(data){
        console.log(JSON.parse(data.responseText));
        checkURL();
    });
}

function adminPageCrimeDelete(id) {
    request('DELETE', 'crime/'+id, null, function(data) {
        console.log(data);
        checkURL();
    });
}

function adminPageCrimeFormSubmit(evt, el) {
    evt.preventDefault();
    console.log(el);
    let tmpCrime = {
        name: el.name.value,
        level: el.level.value,
        _city: el._city.value,
        difficulty: el.difficulty.value,
        maxPayout: el.maxPayout.value,
        minPayout: el.minPayout.value,
        msgSuccess: el.msgSuccess.value.split('\n'),
        msgFalse: el.msgFalse.value.split('\n'),
        experience: el.experience.value,
        cooldown: el.cooldown.value
    };
    console.log('formdata', tmpCrime);
    request('POST', 'crime', JSON.stringify(tmpCrime), function(data){
        console.log(data);
        checkURL();
    });
}

function adminPageWeaponFormSubmit(evt, el) {
    evt.preventDefault(); // Prevent traditional form action which reloads page
    console.log(el);
    let formdata = new FormData();
    formdata.append('name', el.name.value);
    formdata.append('price', el.price.value);
    formdata.append('damage', el.damage.value);
    formdata.append('level', el.level.value);
    formdata.append('_image', el._image.files[0]);
    request('POST', 'weapon', formdata, function(data){
        console.log(data);
        checkURL();
    });
}

function adminPageArmorFormSubmit(evt, el) {
    evt.preventDefault(); // Prevent traditional form action which reloads page
    console.log(el);
    let formdata = new FormData();
    formdata.append('name', el.name.value);
    formdata.append('price', el.price.value);
    formdata.append('defence', el.defence.value);
    formdata.append('level', el.level.value);
    formdata.append('_image', el._image.files[0]);
    request('POST', 'armor', formdata, function(data){
        console.log(data);
        checkURL();
    });
}

function adminPageCarFormSubmit(evt, el) {
    evt.preventDefault(); // Prevent traditional form action which reloads page
    console.log(el);
    let formdata = new FormData();
    formdata.append('name', el.name.value);
    formdata.append('price', el.price.value);
    formdata.append('defence', el.defence.value);
    formdata.append('speed', el.speed.value);
    formdata.append('_city', el._city.value);
    formdata.append('seats', el.seats.value);
    formdata.append('cargo', el.cargo.value);
    formdata.append('level', el.level.value);
    formdata.append('_image', el._image.files[0]);
    request('POST', 'car', formdata, function(data){
        console.log(data);
        checkURL();
    });
}

function renderCityList(req) {
    /* Render the city data plus a form for adding new data 
       Considering to move stuff into a html template*/
    let cities = JSON.parse(req.responseText);
    let tmpEl = `
            <form action="/api/city" method="post" onsubmit="adminPageCityFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                <input type="text"
                    class="form-control" name="name" placeholder="Name">
                </div>
                <div class="form-group">
                <input type="number"
                    class="form-control" name="level" placeholder="Level">
                </div>
                <button type="submit" class="btn btn-primary">Post city</button>
            </form>
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody>
                    ${cities.map(city => `<tr>
                        <td>${city.name}</td>
                        <td>${city.level}</td>
                        <td>${city.active}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}



function renderCrimeList(req) {
    /* Renders crime data and a form to add new crimes */
    let crimes = JSON.parse(req.responseText);
    let tmpEl = `
            <form action="/api/crime" method="post" class="form-horizontal" onsubmit="adminPageCrimeFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                <input type="text" class="form-control" name="name" placeholder="Name" value="Ran">
                </div>
                <div class="form-group">
                <input type="text" class="form-control" name="_city" placeholder="City" value="Bergen">
                </div>
                <div class="form-group">
                <input type="number" class="form-control" name="level" placeholder="Level" value="0">
                </div>
                <div class="form-group">
                <input type="number" class="form-control" name="difficulty" placeholder="Difficulty" value="10">
                </div>
                <div class="form-group">
                <input type="number" class="form-control" name="maxPayout" placeholder="Max payout" value="999">
                </div>
                <div class="form-group">
                <input type="number" class="form-control" name="minPayout" placeholder="Min payout" value="1">
                </div>
                <div class="form-group">
                    <label>Success mesages: One message per line</label>
                    <textarea class="form-control" id="formSuccess" name="msgSuccess"rows="5">You are a beast\nYou the best</textarea>
                </div>
                <div class="form-group">
                    <label>Failure mesages: One message per line</label>
                    <textarea class="form-control" name="msgFalse"rows="5"></textarea>
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="experience" placeholder="Experience" value="10">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="cooldown" placeholder="Cooldown in seconds" value="10">
                </div>
                </div>
                <button type="submit" class="btn btn-primary">Add crime</button>
            </form>
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>_city</th>
                        <th>difficulty</th>
                        <th>minPayout</th>
                        <th>maxPayout</th>
                        <th>active</th>
                    </tr>
                </thead>
                <tbody>
                    ${crimes.map(crime => `<tr>
                        <td>${crime.name}</td>
                        <td>${crime.level}</td>
                        <td>${crime._city}</td>
                        <td>${crime.difficulty}</td>
                        <td>${crime.minPayout}</td>
                        <td>${crime.maxPayout}</td>
                        <td>${crime.active}</td>
                        <td><button type="button" class="btn btn-danger" onclick="adminPageCrimeDelete('${crime._id}')">Delete</button></td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}

function renderPlayerList(req) {
    /* Render players */
    let users = JSON.parse(req.responseText);
    let tmpEl = `
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>City</th>
                        <th>Admin</th>
                        <th>Money</th>
                        <th>HP</th>
                    </tr>
                </thead>
                <tbody>
                    ${users.map(player => `<tr>
                        <td>${player.username}</td>
                        <td>${player.level}</td>
                        <td>${player._city}</td>
                        <td>${player.admin}</td>
                        <td>${player.money}</td>
                        <td>${player.hp}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}

function renderMissionList(req) {
    /* Render players */
    let users = JSON.parse(req.responseText);
    let tmpEl = `
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>City</th>
                        <th>Admin</th>
                        <th>Money</th>
                        <th>HP</th>
                    </tr>
                </thead>
                <tbody>
                    ${users.map(player => `<tr>
                        <td>${player.username}</td>
                        <td>${player.level}</td>
                        <td>${player._city}</td>
                        <td>${player.admin}</td>
                        <td>${player.money}</td>
                        <td>${player.hp}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}

function renderMissionList(req) {
    /* Render weapons */
    let missions = JSON.parse(req.responseText);
    let tmpEl = `
            <form action="/api/weapon" method="post" onsubmit="adminPageWeaponFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                    <input type="text" class="form-control" name="name" placeholder="Name">
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" name="_city" placeholder="City">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="rewardxp" placeholder="Reward XP">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="rewardPayout" placeholder="Reward money">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="level" placeholder="Level">
                </div>
                
                <button type="submit" class="btn btn-primary">Add mission</button>
            </form>
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>City</th>
                        <th>XP</th>
                        <th>Payout</th>
                        <th>Level</th>
                        <th>n requirements</th>
                    </tr>
                </thead>
                <tbody>
                    ${missions.map(mission => `<tr>
                        <td>${mission.name}</td>
                        <td>${mission._city}</td>
                        <td>${mission.rewardxp}</td>
                        <td>${mission.rewardPayout}</td>
                        <td>${mission.level}</td>
                        <td>${mission.requirements.length}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}
function renderCarList(req) {
    /* Render cars */
    let cars = JSON.parse(req.responseText);
    let tmpEl = `
            <form action="/api/car" method="post" onsubmit="adminPageCarFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                    <input type="text" class="form-control" name="name" placeholder="Name">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="price" placeholder="Price">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="defence" placeholder="Defence">
                </div>
                <div class="form-group">
                    <input type="text" class="form-control" name="_city" placeholder="City">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="speed" placeholder="Speed">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="seats" placeholder="Seats">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="cargo" placeholder="Cargo">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="level" placeholder="Level">
                </div>
                <div class="form-group">
                    <input type="file"class="form-control-file" name="_image">
                </div>
                <button type="submit" class="btn btn-primary">Add car</button>
            </form>
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Defence</th>
                        <th>City</th>
                        <th>Speed</th>
                        <th>Seats</th>
                        <th>Cargo</th>
                        <th>Level</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody>
                    ${cars.map(car => `<tr>
                        <td>${car.name}</td>
                        <td>${car.price}</td>
                        <td>${car.defence}</td>
                        <td>${car._city}</td>
                        <td>${car.speed}</td>
                        <td>${car.seats}</td>
                        <td>${car.cargo}</td>
                        <td>${car.level}</td>
                        <td>${car.active}</td>
                        <td><img style="max-height:100px;" src="/api/image/${car._image._id}"></td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}

function renderArmorList(req) {
    /* Render armors */
    let data = JSON.parse(req.responseText);
    let tmpEl = `
            <form action="/api/armor" method="post" onsubmit="adminPageArmorFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                    <input type="text" class="form-control" name="name" placeholder="Name">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="price" placeholder="Price">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="defence" placeholder="Defence">
                </div>
                <div class="form-group">
                    <input type="number" class="form-control" name="level" placeholder="Level">
                </div>
                <div class="form-group">
                    <input type="file"class="form-control-file" name="_image">
                </div>
                <button type="submit" class="btn btn-primary">Add armor</button>
            </form>
            <table class="table" id="adminPageDataTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                        <th>Defence</th>
                        <th>Level</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody>
                    ${data.map(armor => `<tr>
                        <td>${armor.name}</td>
                        <td>${armor.price}</td>
                        <td>${armor.defence}</td>
                        <td>${armor.level}</td>
                        <td>${armor.active}</td>
                        <td><img style="max-height:100px;" src="/api/image/${armor._image._id}"></td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}
</script>