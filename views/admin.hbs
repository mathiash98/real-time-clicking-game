<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3">
            <div class="list-group" id="adminPageNavList">
                <a href="/admin/player" class="list-group-item list-group-item-action active">Players</a>
                <a href="/admin/crime" class="list-group-item list-group-item-action">Crimes</a>
                <a href="/admin/city" class="list-group-item list-group-item-action">City</a>
            </div>
        </div>
        <div class="col-sm-8" id="adminPageContainer">
            
        </div>

    </div>
</div>



<script>
    let adminPageContainer = document.getElementById('adminPageContainer');
    let lastActiveNavListEl = document.getElementById('adminPageNavList').children[0];
    checkURL();
    
    document.getElementById('adminPageNavList').addEventListener('click', function(evt){
        /**/
        evt.preventDefault();
        lastActiveNavListEl.classList.toggle('active');
        evt.target.classList.toggle('active');
        lastActiveNavListEl = evt.target;

        history.pushState({
            url: evt.target.href,
            title: 'Admin: ' + evt.target.innerHTML
        }, 'Admin: ' + evt.target.innerHTML, evt.target.href);

        document.title = 'Admin: ' + evt.target.innerHTML;

        checkURL();
    });

    window.onpopstate = function(event) {
        /* is only runned when user click back button in browser 
           so everytime user clicks a link in the adminPageNavList the eventlistener there has to run check url function*/
        console.log(event);
    };

function adminPageCityFormSubmit(evt, el) {
    evt.preventDefault();
    console.log(el);
    console.log(el.name);
    let tmpcity = {
        name: el.name.value,
        level: el.level.value
    }
    request('POST', 'crime', JSON.stringify(tmpcity), function(data){
        console.log(data);
        checkURL();
    });
}

function adminPageCrimeFormSubmit(evt, el) {
    evt.preventDefault();
    console.log(el);
    let tmpCrime = {
        name: el.name.value,
        level: el.level.value,
        _city: el._city.value,
        difficulty: el.difficulty.value,
        maxPayout: el.maxPayout.value,
        minPayout: el.minPayout.value
    }
    request('POST', 'city', JSON.stringify(tmpCrime), function(data){
        console.log(data);
        checkURL();
    });
}

function checkURL() {
    /* Gets the current url and checks if it contains some of the defined pages
       if the page is found, it will get the matching data from API and render the needed data */
    let url = '';

    if (history.state == null) { // History date is null when user cam directly to this site etc ip:port/admin/city
        url = document.URL;
    } else { // However if user has used the back/forward button, the history state will change
        url = history.state.url; 
    }
    console.log(url, url.indexOf('crime'));

    // Checks if url contains string and gets data which passes data to render function
    if (url.indexOf('player') >= 0) {
        request('GET', 'player', '', renderPlayerList);
    } else if(url.indexOf('crime') >= 0){
        request('GET', 'crime', '', renderCrimeList);
    } else if(url.indexOf('city') >= 0){
        request('GET', 'city', '', renderCityList);
    }
}


function renderCityList(cities) {
    /* Render the city data plus a form for adding new data 
       Considering to move stuff into a html template*/
    let tmpEl = `
            <form action="/api/city" method="post" onsubmit="adminPageCityFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                <input type="text"
                    class="form-control" name="name" placeholder="Name">
                </div>
                <div class="form-group">
                <input type="number"
                    class="form-control" name="level" placeholder="Level">
                </div>
                <button type="submit" class="btn btn-primary">Post city</button>
            </form>
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>Active</th>
                    </tr>
                </thead>
                <tbody>
                    ${cities.map(city => `<tr>
                        <td>${city.name}</td>
                        <td>${city.level}</td>
                        <td>${city.active}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}



function renderCrimeList(crimes) {
    /* Renders crime data and a form to add new crimes */
    let tmpEl = `
            <form action="/api/crime" method="post" onsubmit="adminPageCrimeFormSubmit(event, this)" id="adminPagePostForm">
                <div class="form-group">
                <input type="text"
                    class="form-control" name="name" placeholder="Name">
                </div>
                <div class="form-group">
                <input type="text"
                    class="form-control" name="_city" placeholder="City">
                </div>
                <div class="form-group">
                <input type="number"
                    class="form-control" name="level" placeholder="Level">
                </div>
                <div class="form-group">
                <input type="number"
                    class="form-control" name="difficulty" placeholder="Difficulty">
                </div>
                <div class="form-group">
                <input type="number"
                    class="form-control" name="maxPayout" placeholder="Max payout">
                </div>
                <div class="form-group">
                <input type="number"
                    class="form-control" name="minPayout" placeholder="Min payout">
                </div>
                <button type="submit" class="btn btn-primary">Add crime</button>
            </form>
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>_city</th>
                        <th>difficulty</th>
                        <th>minPayout</th>
                        <th>maxPayout</th>
                        <th>active</th>
                    </tr>
                </thead>
                <tbody>
                    ${crimes.map(crime => `<tr>
                        <td>${crime.name}</td>
                        <td>${crime.level}</td>
                        <td>${crime._city}</td>
                        <td>${crime.difficulty}</td>
                        <td>${crime.minPayout}</td>
                        <td>${crime.maxPayout}</td>
                        <td>${crime.active}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}

function renderPlayerList(users) {
    /* Render players */
    let tmpEl = `
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Level</th>
                        <th>City</th>
                        <th>Admin</th>
                        <th>money</th>
                    </tr>
                </thead>
                <tbody>
                    ${users.map(player => `<tr>
                        <td>${player.username}</td>
                        <td>${player.level}</td>
                        <td>${player._city}</td>
                        <td>${player.admin}</td>
                        <td>${player.money}</td>
                    </tr>`)}
                </tbody>
            </table>
        `;
        adminPageContainer.innerHTML = tmpEl;
}

function request(method, target, data, cb) {
    /*Sends a request to /api/:target with method, with data
      The response is then parsed and sent as argument to cb function*/
    var xhr = new XMLHttpRequest();
    xhr.addEventListener("readystatechange", function () {
    if (this.readyState === 4) {
        console.log(this.responseText);
        cb(JSON.parse(this.responseText));
    }
    });

    xhr.open(method, "/api/"+target);
    if(data) {
        xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    }
    xhr.send(data);
}
</script>